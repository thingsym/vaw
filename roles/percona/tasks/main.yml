---
- name: include task
  include_tasks: "percona-{{ percona_version | default(5.7) }}.yml"

- name: stat mysql dir
  stat:
    path: /etc/mysql
  register: is_mysql_dir

- name: mkdir mysql
  file:
    path: /etc/mysql
    state: directory
    owner: mysql
  when: not is_mysql_dir.stat.exists

- name: stat custom my.cnf.j2
  stat:
    path: /vagrant/config/percona.my.cnf.j2
  register: is_custom_my_conf

- name: custom my.cnf changed
  template:
    src: /vagrant/config/percona.my.cnf.j2
    dest: /etc/mysql/my.cnf
  when: is_custom_my_conf.stat.exists

- name: my.cnf changed
  template:
    src: percona.my.cnf.j2
    dest: /etc/mysql/my.cnf
  when: not is_custom_my_conf.stat.exists

- name: mkdir /var/log/mysql
  file:
    path: /var/log/mysql
    state: directory
    owner: mysql
    group: mysql

- name: mkdir /var/run/mysqld
  file:
    path: /var/run/mysqld
    state: directory
    owner: mysql
    group: mysql
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version is version('6', '==')

- name: mysql started and enabled
  service:
    name: mysql
    state: restarted
    enabled: yes

- block:
  - name: get temporary password from mysqld.log
    shell: cat /var/log/mysql/mysqld.log | grep "temporary password" | awk '{print $11}'
    register: mysql_temp_password

  - name: change password validation
    shell: |
      mysql -u root -p'{{ mysql_temp_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password_length=4;"
      mysql -u root -p'{{ mysql_temp_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password_policy=LOW;"

  - name: set percona 5.7 root password from temporary password (CentOS/RHEL)
    shell: mysql -uroot -p'{{ mysql_temp_password.stdout }}' --connect-expired-password -e "SET PASSWORD=PASSWORD('{{ db_root_password }}');"
  when:
    - ansible_os_family == 'RedHat'
    - percona_version is version('5.7', '==')

- name: set percona root password (Debian)
  mysql_user:
    name: root
    password: "{{ db_root_password }}"
    host: "{{ item }}"
    state: present
    login_user: root
    login_password: "{{ db_root_password }}"
    login_unix_socket: /tmp/mysql.sock
  with_items:
    - localhost
    - 127.0.0.1
    - ::1
  when:
    - ansible_os_family == 'Debian'

- name: delete blank percona users
  mysql_user:
    name: ""
    host_all: true
    state: absent
    login_user: root
    login_password: "{{ db_root_password }}"
    login_unix_socket: /tmp/mysql.sock

- name: drop percona test database
  mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ db_root_password }}"
    login_unix_socket: /tmp/mysql.sock
