---
- name: include task
  ansible.builtin.include_tasks: "mysql-{{ mysql_version | default(5.7) }}.yml"

- name: stat custom my.cnf.j2
  ansible.builtin.stat:
    path: /vagrant/config/mysql.my.cnf.j2
  register: is_custom_my_conf

- name: RedHat
  when: ansible_os_family == 'RedHat'
  block:
  - name: custom my.cnf changed
    when: is_custom_my_conf.stat.exists
    ansible.builtin.template:
      src: /vagrant/config/mysql.my.cnf.j2
      dest: /etc/my.cnf
      mode: "0644"

  - name: my.cnf changed
    when: not is_custom_my_conf.stat.exists
    ansible.builtin.template:
      src: mysql.my.cnf.j2
      dest: /etc/my.cnf
      mode: "0644"

- name: Debian
  when: ansible_os_family == 'Debian'
  block:
  - name: stat mysql dir
    ansible.builtin.stat:
      path: /etc/mysql
    register: is_mysql_dir

  - name: mkdir mysql
    when: not is_mysql_dir.stat.exists
    ansible.builtin.file:
      path: /etc/mysql
      state: directory
      owner: mysql
      mode: "0755"

  - name: custom my.cnf changed
    when: is_custom_my_conf.stat.exists
    ansible.builtin.template:
      src: /vagrant/config/mysql.my.cnf.j2
      dest: /etc/mysql/my.cnf
      mode: "0644"

  - name: my.cnf changed
    when: not is_custom_my_conf.stat.exists
    ansible.builtin.template:
      src: mysql.my.cnf.j2
      dest: /etc/mysql/my.cnf
      mode: "0644"

- name: mkdir /var/log/mysql
  ansible.builtin.file:
    path: /var/log/mysql
    state: directory
    owner: mysql
    group: mysql
    mode: "0755"

- name: mysqld started and enabled (CentOS/RHEL)
  when: ansible_os_family == 'RedHat'
  ansible.builtin.service:
    name: mysqld
    state: restarted
    enabled: yes

- name: mysql started and enabled (Debian)
  when: ansible_os_family == 'Debian'
  ansible.builtin.service:
    name: mysql
    state: restarted
    enabled: yes

- name: check mysql root password chenged
  ansible.builtin.command: mysql -uroot -p'{{ db_root_password }}' --connect-expired-password
  register: mysql_chenged_root_password_result
  failed_when: false
  changed_when: false

- name: RedHat version 5.7
  when:
    - ansible_os_family == 'RedHat'
    - mysql_version is version('5.7', '==')
    - mysql_chenged_root_password_result.rc != 0
  no_log: True
  block:
  - name: get temporary password from mysqld.log - mysql 5.7
    ansible.builtin.shell: cat /var/log/mysql/mysqld.log | grep "temporary password" | awk '{print $11}'
    register: mysql_temp_password

  - name: change password validation
    ansible.builtin.shell: |
      mysql -u root -p'{{ mysql_temp_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password_length=4;"
      mysql -u root -p'{{ mysql_temp_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password_policy=LOW;"

  - name: set mysql 5.7 root password from temporary password (CentOS/RHEL)
    ansible.builtin.shell: mysql -uroot -p'{{ mysql_temp_password.stdout }}' --connect-expired-password -e "SET PASSWORD=PASSWORD('{{ db_root_password }}');"

- name: RedHat version 8.0
  when:
    - ansible_os_family == 'RedHat'
    - mysql_version is version('8.0', '==')
    - mysql_chenged_root_password_result.rc != 0
  no_log: True
  block:
  - name: get temporary password from mysqld.log - mysql 8.0
    ansible.builtin.shell: cat /var/log/mysql/mysqld.log | grep "temporary password" | awk '{print $13}'
    register: mysql_temp_password

  - name: change password validation
    ansible.builtin.shell: |
      mysql -u root -p'{{ mysql_temp_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password.length=4;"
      mysql -u root -p'{{ mysql_temp_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password.policy=LOW;"

  - name: set mysql 8.0 root password from temporary password (CentOS/RHEL)
    ansible.builtin.shell: mysql -uroot -p'{{ mysql_temp_password.stdout }}' --connect-expired-password -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ db_root_password }}';"

- name: set mysql 8.0 root password (CentOS/RHEL)
  when:
    - ansible_os_family == 'RedHat'
    - mysql_version is version('8.0', '==')
  no_log: True
  community.mysql.mysql_user:
    name: root
    password: "{{ db_root_password }}"
    host: "{{ item }}"
    state: present
    check_implicit_admin: yes
    login_user: root
    login_password: "{{ db_root_password }}"
    login_unix_socket: /tmp/mysql.sock
  with_items:
    - localhost
    - 127.0.0.1
    - ::1

- name: set mysql 5.7 root password (Debian)
  when:
    - ansible_os_family == 'Debian'
    - mysql_version is version('5.7', '<=')
  no_log: True
  community.mysql.mysql_user:
    name: root
    password: "{{ db_root_password }}"
    host: "{{ item }}"
    state: present
    check_implicit_admin: yes
    login_user: root
    login_password: "{{ db_root_password }}"
    login_unix_socket: /tmp/mysql.sock
  with_items:
    - localhost
    - 127.0.0.1
    - ::1

- name: Debian 8.0 later
  when:
    - ansible_os_family == 'Debian'
    - mysql_version is version('8.0', '>=')
  block:
  - name: set mysql 8.0 root password (Debian)
    community.mysql.mysql_user:
      name: root
      password: "{{ db_root_password }}"
      host: "{{ item }}"
      state: present
      login_user: root
      login_password: "{{ db_root_password }}"
      login_unix_socket: /tmp/mysql.sock
    with_items:
      - localhost
    no_log: True

  - name: set mysql root password (host)
    community.mysql.mysql_user:
      name: root
      password: "{{ db_root_password }}"
      host: "{{ item }}"
      state: present
      login_user: root
      login_password: "{{ db_root_password }}"
      login_unix_socket: /tmp/mysql.sock
    with_items:
      - 127.0.0.1
      - ::1
    no_log: True

- name: delete anonymous mysql users
  community.mysql.mysql_user:
    name: ""
    host_all: true
    state: absent
    login_user: root
    login_password: "{{ db_root_password }}"
    login_unix_socket: /tmp/mysql.sock

- name: drop mysql test database
  community.mysql.mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ db_root_password }}"
    login_unix_socket: /tmp/mysql.sock
